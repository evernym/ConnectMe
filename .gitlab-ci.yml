---
stages:
  - prebuild
  - check
  - test
  - build
  - devicefarm-test
  - devicefarm-test-top
  - devicefarm-test-next
  - devicefarm-test-final
  - upload
  - devicefarm-test-upgrade-path
  - devicefarm-test-acapy

### - Pre-build - ###
# Helpers / Anchors
.kaniko_build:
  tags:
    - docker-machine
    - large
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - if [ "$CI_COMMIT_REF_SLUG" == 'main' ]; then KANIKO_ARGS="--destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:latest $KANIKO_ARGS"; fi
    - echo "${KANIKO_ARGS}"
    - |
      echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" \
      > /kaniko/.docker/config.json
    - |
      echo "-----BEGIN CERTIFICATE-----
      MIIFJTCCAw2gAwIBAgIUMI0Z8YSLeRq8pZks40O3Dq2m8TIwDQYJKoZIhvcNAQEL
      BQAwGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMB4XDTE3MTAxMTIwMTAxMFoX
      DTQ3MTAwNDIwMTAzOVowGjEYMBYGA1UEAxMPRXZlcm55bSBSb290IENBMIICIjAN
      BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1kjmtmMfLJfsqUNaco44N3brW8Vu
      b02lAeEwbxc65mwfAG8kAjW7kYhI/fDXFOYXUvoa3Dg7bFeEatdIjHOahZssGM27
      HsQZ4PfRhPE6HtXFszmDwXWuEekVxoyueTqL7ExnNZ+BRTXvPfm5nw1E7L3o3xHF
      GSOtWFCyHfKd1LwMKzAVSjxlawEZnfk3WK3NxrC4UYMlQaDme7m3rCMfO+KBQk69
      bFXsgn6/EihVeQ8T1+T8gogofzh5b4Z7kS6e6GMqotbGFg4agejkRVsIglSpaQLk
      2Ztn/MP1dwgyvO4uvplB4sxZSC2FhhovlwPETmbKsnpj020+m0+YU4FPKwjroMiH
      tP//YqiNKsLxtjhffW7XFToyy0qQttW5RMWnyx4MXs9Hwcy29gY1izeGMSzz3zV5
      HG8JSJikuYbYiGJRVS0egovkVjja6lrVk0Q4Hm5pbw4l7LYCd6bkDLMsRaS1QnWs
      9iz6XEf5SpIu1FuqHmlhj1ABehUyGIg5oC6egML3q78yk0mCW523qMFa9Kjnk871
      mmXSCn3p/3DCrwWYfpcibxtVaKyJj6ISYIcl+Zu65Uzmhf+nj56x3gkNgEOva7JS
      Xge+FxPxsaXBGyeSH09nNIoNmh/UucuzpNY2UyCpJuqXHtR5jaACSdsqNxG8tcDg
      K9v98D/DFiShghECAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF
      MAMBAf8wHQYDVR0OBBYEFOrH4oUpB94gNDNqdGG92kdVZ3qkMB8GA1UdIwQYMBaA
      FOrH4oUpB94gNDNqdGG92kdVZ3qkMA0GCSqGSIb3DQEBCwUAA4ICAQCwjN3ggZ98
      BXT39fKkCX3FHb0++aFcIyMKWrcZIpYrl3GoZsNKZK4QNQ+uJOP8xmqgyrCoMfch
      VIGPQ0RDN/IzqCLhc/U3pDmk2hXa3xTxD3gpCQZ6Bz04KlcLfZd5jzbI741bVDyF
      a1n46bEyuqV4SsNJWI/FGokJCNcZH66njBQBaQAccZ7xB9vWU9yjIYtGQDDvSm6J
      SC2knrQri0vv4QLUSc1LS6AlWWSQxcCpcdO+OzIFGsf5bVmYN6J4R3COY5NyQ+yn
      pOSN2NOh5h3ZrYAxm3i4Il0orVLveVcTVDGeAgZUII4YLJi/01RHGqit3aCuApSh
      bzFTZ5FldFss+JX9iAhqpFDbHLgae0F3QmYEnGilt/PzO4j23QJo3FZKeruQLH7P
      L9aOgN6S2+Akbbm9YTc59yzU5TZMxANwTdaYFWFqk/8nKgZiBR1l8jnWTlWnm86A
      qVssH3DLKwiYrWSOHRzGuN5BmPXxxtKQJlwAXt0wJE3puUkaJSRo7CJQ3QNMoKDe
      OjzXc9WvkFIXr3Eui8UTiHB/WT7N4o8hmVN404akGfWE0YNwRVfWpjGdew6g0tZi
      lFnjUUk49av67um43JHcinT5NFPuleZzkjaL/D8ueOrjXQDy05rwVdgmw9pXog4B
      Tw6APXtEnjfD2H8HOpOX/7ef4gWK0O1Q7A==
      -----END CERTIFICATE-----" >> /kaniko/ssl/certs/ca-certificates.crt
    - |
      /kaniko/executor ${KANIKO_ARGS} --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/${DOCKERFILE_PATH} \
      --destination $CI_REGISTRY_IMAGE/${DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}

# Jobs

## Build image for Appium tests ##
devicefarm-buildtools:
  stage: prebuild
  extends: .kaniko_build
  variables:
    DOCKERFILE_PATH: ci/images/devicefarm.dockerfile
    DOCKER_IMAGE_NAME: devicefarm
  only:
    changes:
      - ci/images/devicefarm.dockerfile

ubuntu-build:
  stage: prebuild
  extends: .kaniko_build
  tags:
    - docker-machine
  variables:
    DOCKERFILE_PATH: ci/images/ubuntu18.dockerfile
    DOCKER_IMAGE_NAME: ubuntu18
  only:
    changes:
      - ci/images/ubuntu18.dockerfile

### - Checks - ###

## - Check license file - ##
license-data-check:
  stage: check
  image: ${CI_REGISTRY_IMAGE}/ubuntu18:${CI_COMMIT_REF_SLUG}
  script: ./ci/license-date-check.sh
  only:
    refs:
      - branches
      - tags
  tags:
    - docker-machine
  except:
    - white-label-app-e2e-testing

### - Test - ###

### - iOS - ###
.build-ios:
  stage: build
  tags:
    - macos
    - bigsur
    - xcode-12-4
  artifacts:
    paths:
      - ios/ConnectMe.ipa
      - ios/ConnectMe-appstore.ipa
  script:
    - xcversion select --verbose --symlink 12.4
    - xcversion selected
    - sudo xcodebuild -license accept
    - cd ios
    - gem uninstall bundler
    - gem install bundler
    - bundler update --bundler
    - gem install cocoapods
    - cd ..
    - mkdir -p ~/.ssh/
    - ssh-keyscan -4H gitlab.corp.evernym.com > ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$CALLCENTER_CERTS_DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$IOSDEV_EVERNYM_RSA_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - chmod 644 ~/.ssh/known_hosts
    - nvm use
    - yarn install
    - security -v unlock-keychain -p ${VAGRANT_USER_PASS} ~/Library/Keychains/login.keychain-db
    - git config --global user.name 'Gitlab'
    - git config --global user.email 'it@evernym.com'
    - git remote set-url origin git@gitlab.corp.evernym.com:${CI_PROJECT_PATH}.git
    - cd ios
    - bundle install
    - bundle exec fastlane build
  after_script:
    - cat ./ios/react-native-xcode.sh.log

build-ios-merge-request:
  extends: .build-ios
  variables:
    BUILD_TYPE: 'ConnectMe Dev Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
  # rules:
  #   - if: '$CI_COMMIT_REF_NAME == "white-label-app-e2e-testing"'
  #     when: always
  # # run this for any branch except main
  only:
    - branches@evernym/mobile/connectme
  except:
    - main@evernym/mobile/connectme

build-ios-master:
  extends: .build-ios
  # Variable expansion doesn't work in `variables` section. Do it here instead.
  variables:
    BUILD_TYPE: 'QA ConnectMe Build'
    DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer/'
    # this gets passed to the anchor
  only:
      refs:
          - main@evernym/mobile/connectme

### - Android - ###
.build-android:
  stage: build
  tags:
    - docker-machine
    - large
  image: bitriseio/android-ndk-lts
  artifacts:
    paths:
      - android/app/build/outputs/apk/release/*.apk
    expire_in: 1 week
  script:
    - chmod +x ./ci/install-nodejs.sh
    - ./ci/install-nodejs.sh
    - yarn
    - gem install fastlane
    - mkdir -p $HOME/keystores/
    - yes | sdkmanager --licenses || true
    - cd android
    - gem install bundler:1.17.2
    - bundle install
    - echo ${ANDROID_KEYSTORE_B64} | base64 -d > $HOME/keystores/my_keystore.jks
    - bundle exec fastlane build

build-android-merge-request:
  extends: .build-android
  artifacts:
    paths:
      - android/app/build/outputs/apk/release/*.apk
    expire_in: 1 week
  # rules:
  #   - if: '$CI_COMMIT_REF_NAME == "white-label-app-e2e-testing"'
  #     when: always
  # # run this for any branch except main
  only:
    - branches@evernym/mobile/connectme
  except:
    - main@evernym/mobile/connectme

build-android-master:
  extends: .build-android
  only:
      refs:
          - main@evernym/mobile/connectme

# Upload jobs
upload-ios:
  stage: upload
  tags:
    - macos
    - bigsur
    - xcode-12-4
  script:
    - xcversion select --verbose --symlink 12.4
    - xcversion selected
    - sudo xcodebuild -license accept
    - cd ios
    - gem install fastlane
    - bundle install
    - bundle exec fastlane upload
  only:
    refs:
      - main@evernym/mobile/connectme

upload-android:
  stage: upload
  script:
    - cd android
    - gem install fastlane
    - bundle install
    - bundle exec fastlane upload
  only:
    refs:
      - main@evernym/mobile/connectme

# Basic lint
#yarn-test:
#  stage: test
#  image: ${CI_REGISTRY_IMAGE}/ubuntu18:${CI_COMMIT_REF_SLUG}
#  script:
#    - dig @8.8.8.8 google.com
#    - dig google.com
#    - dig www.npmjs.com
#    - dig https://jcenter.bintray.com
#    - dig @8.8.8.8 https://jcenter.bintray.com
#    - yarn config set ignore-engines true
#    - yarn install
#    - yarn lint
#  only:
#    refs:
#      - branches
#      - tags
#  tags:
#    - docker-machine
#  except:
#    - white-label-app-e2e-testing

### - Devicefarm-test - ###
include:
  local: "/ci/devicefarm-test.yml"
