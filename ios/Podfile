platform :ios, '11.0'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require 'fileutils'

source 'https://cdn.cocoapods.org/'
source 'https://gitlab.com/evernym/mobile/mobile-sdk.git'

def vcx_version_for_debug_or_release
    if ENV['CONNECTME_DEBUG'] == "true"
        '0.0.214'
    else
        '0.0.213'
    end
end

## Fix for XCode 13
# def find_and_replace(dir, findstr, replacestr)
#   Dir[dir].each do |name|
#       text = File.read(name)
#       replace = text.gsub(findstr,replacestr)
#       if text != replace
#           puts "Fix: " + name
#           File.open(name, "w") { |file| file.puts replace }
#           STDOUT.flush
#       end
#   end
#   Dir[dir + '*/'].each(&method(:find_and_replace))
# end

# Convert all permission pods into static libraries
pre_install do |installer|
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}

  installer.pod_targets.each do |pod|
    if pod.name.eql?('RNPermissions') || pod.name.start_with?('Permission-')
      def pod.build_type;
        # Uncomment the line corresponding to your CocoaPods version
        Pod::BuildType.static_library # >= 1.9
        # Pod::Target::BuildType.static_library # < 1.9
      end
    end
  end
end


post_install do |installer|
		installer.pods_project.build_configurations.each do |config|
			config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
		end
    installer.pods_project.targets.each do |target|
        if target.name == "react-native-white-label-app"
            target.build_configurations.each do |config|
                config.build_settings['ENABLE_BITCODE'] = 'NO'
            end
        end
        if target.name == "vcx"
            target.build_configurations.each do |config|
                config.build_settings['ENABLE_BITCODE'] = 'NO'
            end
        end
				if ['iProov', 'Socket.IO-Client-Swift', 'Starscream'].include? target.name
					target.build_configurations.each do |config|
							config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
					end
				end
    end

		## Fix for XCode 13
    # find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
    # "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
		# find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
		# "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")
end

target 'ConnectMe' do

	use_frameworks!

	# Allow using RNFirebase as static frameworks
	$RNFirebaseAsStaticFramework = true

	pod 'FBLazyVector', :path => "../node_modules/react-native/Libraries/FBLazyVector"
	pod 'FBReactNativeSpec', :path => "../node_modules/react-native/Libraries/FBReactNativeSpec"
	pod 'RCTRequired', :path => "../node_modules/react-native/Libraries/RCTRequired"
	pod 'RCTTypeSafety', :path => "../node_modules/react-native/Libraries/TypeSafety"
	pod 'React', :path => '../node_modules/react-native/'
	pod 'React-Core', :path => '../node_modules/react-native/'
	pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
	pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'
	pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
	pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
	pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
	FileUtils.cp('../patches/iOS14.patch.RCTUIImageViewAnimated.m','../node_modules/react-native/Libraries/Image/RCTUIImageViewAnimated.m')
	pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
	pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
	pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
	pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
	pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
	pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
	pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native/'

    pod 'Permission-Camera', :path => "../node_modules/react-native-permissions/ios/Camera"

	pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
	pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
	pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
	pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
	pod 'ReactCommon/jscallinvoker', :path => "../node_modules/react-native/ReactCommon"
	pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
	pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

	pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
	pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
	pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

	# Pod dependecy for MIDS
	pod 'JumioMobileSDK', '~>3.9.0' # Use Netverify, Authentication, Document Verification and BAM Checkout together in your app
	pod 'JumioMobileSDK/Netverify', '~>3.9.0' # Use full Netverify and Authentication functionality
	pod 'JumioMobileSDK/NetverifyBase', '~>3.9.0' # For Fastfill, Netverify basic functionality
	pod 'JumioMobileSDK/NetverifyNFC', '~>3.9.0' # For Fastfill, Netverify functionality with NFC extraction
	pod 'JumioMobileSDK/NetverifyBarcode', '~>3.9.0' # For Fastfill, Netverify functionality with barcode extraction
	pod 'JumioMobileSDK/NetverifyFace+iProov', '~>3.9.0' # For Fastfill, Netverify functionality with Identity Verification, Authentication
	pod 'JumioMobileSDK/NetverifyFace+Zoom', '~>3.9.0' # For Fastfill, Netverify functionality with Identity Verification, Authentication
	pod 'JumioMobileSDK/DocumentVerification', '~>3.9.0' # Use Document Verification functionality
	pod 'JumioMobileSDK/BAMCheckout', '~>3.9.0' # Use BAM Checkout functionality

	# Other pods dependency

	pod 'vcx', vcx_version_for_debug_or_release
	pod 'apptentive-ios', '5.2.2'

	target 'ConnectMeTests' do
        inherit! :search_paths
	end

	use_native_modules!

  ## Fix for XCode 12.5
    #   find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
    #   "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
    #   find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
    #   "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")

end
